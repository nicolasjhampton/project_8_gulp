!function(e){if("object"==typeof module&&"object"==typeof module.exports){var t=e(require,exports);void 0!==t&&(module.exports=t)}else"function"==typeof define&&define.amd&&define(["require","exports","jquery"],e)}(function(e,t){"use strict";var i=e("jquery");t.jQuery=i,function(e){e.fn.autogrow=function(t){function i(i){var n,o=e(this),s=o.innerHeight(),c=this.scrollHeight,a=o.data("autogrow-start-height")||0;if(s<c)this.scrollTop=0,t.animate?o.stop().animate({height:c},t.speed):o.innerHeight(c);else if(!i||8==i.which||46==i.which||i.ctrlKey&&88==i.which)if(s>a){n=o.clone().addClass(t.cloneClass).css({position:"absolute",zIndex:-10,height:""}).val(o.val()),o.after(n);do c=n[0].scrollHeight-1,n.innerHeight(c);while(c===n[0].scrollHeight);c++,n.remove(),o.focus(),c<a&&(c=a),s>c&&t.animate?o.stop().animate({height:c},t.speed):o.innerHeight(c)}else o.innerHeight(a)}var n=e(this).css({overflow:"hidden",resize:"none"}),o=n.selector,s={context:e(document),animate:!0,speed:200,fixMinHeight:!0,cloneClass:"autogrowclone",onInitialize:!1};return t=e.isPlainObject(t)?t:{context:t?t:e(document)},t=e.extend({},s,t),n.each(function(n,o){var s,c;o=e(o),o.is(":visible")||parseInt(o.css("height"),10)>0?s=parseInt(o.css("height"),10)||o.innerHeight():(c=o.clone().addClass(t.cloneClass).val(o.val()).css({position:"absolute",visibility:"hidden",display:"block"}),e("body").append(c),s=c.innerHeight(),c.remove()),t.fixMinHeight&&o.data("autogrow-start-height",s),o.css("height",s),t.onInitialize&&o.length&&i.call(o[0])}),t.context.on("keyup paste",o,i),n}}(i)}),function(e){if("object"==typeof module&&"object"==typeof module.exports){var t=e(require,exports);void 0!==t&&(module.exports=t)}else"function"==typeof define&&define.amd&&define(["require","exports","./autogrow"],e)}(function(e,t){"use strict";e("./autogrow"),$(document).ready(function(){$("textarea").autogrow({onInitialize:!0}),$(".circle--clone--list").on("click",".circle--clone--add",function(){var e=$(this).parent("li"),t=e.clone();e.after(t),t.find("input, textarea, select").val(""),t.find("*:first-child").focus()}),$(".circle--clone--list").on("click","li:not(:only-child) .circle--clone--remove",function(){var e=$(this).parent("li");e.remove()}),$(".circle--pill--list a").click(function(){$(".circle--pill--list a").removeClass("selected"),$(this).addClass("selected")}),$(".circle--select select").focus(function(){$(this).parent().addClass("focus")}).blur(function(){$(this).parent().removeClass("focus")}),$(".clickable-row").click(function(){var e=$(this).data("href"),t=$(this).data("target");$(this).attr("data-target")?window.open(e,t):window.open(e,"_self")});var e=$(".circle--input--file"),t=e.data("text"),i=e.data("state");e.wrap(function(){return"<a class='button "+i+"'>"+t+"</div>"})})});
//# sourceMappingURL=data:application/json;base64,
